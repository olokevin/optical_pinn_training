[basic]
device = cuda:0
; experiment_root = ./exp/k1
experiment_name = exp

[pretrained]
incre = False
; incre = True
load_model_path = /home/user_name/Project/ONN/zo_tonn_training/PINNs/Black_Scholes/exp/tonn/gradients_sparse_grid/adam/steplr/expscr_lr_1e-3/4191721/checkpoints/model_epoch_10000.pth
pruned = False


[dataio]

[loss_func]
val_every = True
; gradient_func = gradients_auto_diff
; gradient_func = gradients_cd2
; gradient_func = gradients_stein
gradient_func = gradients_sparse_grid

[model]
; ============= tensorized_dnn =============
type = tonn
mzi_noise = True
; mzi_noise = False

###### TTM ######
in_features = 2
out_features = 1
hidden_features = 128
shape_list = [[], [[4,4,8],[4,4,8]], []]
; hidden_features = 512
; shape_list = [[], [[4,4,4,8],[8,4,4,4]], []]
; hidden_features = 1024
; shape_list = [[], [[4,8,4,8],[8,4,8,4]], []]
num_layers = 3
nonlinearity = tanh

order = 5
min_dim = 2
factorization = ttm
rank = 2
tensorize_first = False
tensorize_last = False


bias = True
dtype

[training]
lr = 1e-3
; lr = 5e-4
epochs = 10000
epochs_til_checkpoints = 10000
start_epoch = 0
lr_decay = True
epochs_til_val = 100
verbose = False

random_state = 42
; random_state = 768

; ============= optimizer =============
debug = False

; FO training
; optimizer = sgd
optimizer = adam

; ZO training
; optimizer = ZO_SGD_mask
; sigma = 0.1
; n_sample = 10
; signSGD = True
; layer_by_layer = False
; opt_layers_strs = ['TensorizedLinear', 'nn.Linear']
; sample_method = gaussian

; ============= scheduler =============
scheduler = steplr
epochs_til_decay = 1000
gamma = 1
; gamma = 0.9

[validation]


[evaluation]
plot = True

[GraSP]
pruner = False
pruner_file = False

exception = -1
iterations = 1
normalize = false
target_ratio = 0.999
num_iters = 1

; ============= ZO_Estim =============
[ZO_Estim]
; en = False
en = True
name = ZO_Estim_MC
sigma = 0.025
n_sample = 1
signsgd = False

scale = null
; scale = sqrt_dim
; scale = dim

actv_perturb_layer_list = null
; actv_perturb_layer_list = ['inverted_bottleneck.conv',]
; actv_perturb_layer_list = ['inverted_bottleneck.conv', 'point_linear.conv']
; actv_perturb_block_idx_list = all
; actv_perturb_block_idx_list = [-2,]

; param_perturb_param_list = null
; param_perturb_param_list = ['weight', ]
param_perturb_param_list = ['phase_U', 'phase_S', 'phase_V', 'bias', 'weight']
param_perturb_block_idx_list = all
; param_perturb_block_idx_list = [8,]

; obj_fn_type = classifier
; obj_fn_type = classifier_layerwise
obj_fn_type = pinn

quantized = False

en_layerwise_perturbation = True
; en_layerwise_perturbation = False
en_partial_forward = False

en_param_commit = True

; estimate_method = forward
estimate_method = antithetic

; sample_method = uniform
; sample_method = gaussian
sample_method = bernoulli
; sample_method = coord_basis

normalize_perturbation = False
; normalize_perturbation = True